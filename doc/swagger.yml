swagger: '2.0'
info:
  title: 'Anno Server API'
consumes:
  - application/ld+json
produces:
  - application/ld+json
tags:
  - 'anno':
      name: anno
      description: Handling annotations

definitions:

    # target:
      # - source:  "https://example.org/somePage"
        # selector:
          # type: "FragmentSelector"
          # value: 'xywh=1,1,1,1'
  AnnotationSelector:
    type: 'object'
    properties:
      type:
        type: 'string'
        enum:
          - 'FragmentSelector'
          - 'SvgSelector'
      value:
        type: 'string'

  AnnotationTarget:
    type: 'object'
    properties:
      source:
        type: 'string'
        format: 'url'
      selector:
        maxItems: 1
        $ref: '#/definitions/AnnotationSelector'

  AnnotationBody:
    type: 'object'
    properties:
      format:
        type: 'string'
        enum: ['text/html']
      type:
        type: 'string'
        enum: ['TextualBody']
      value:
        type: 'string'

  AnnotationToPost:
    type: object
    properties:
      # created:
      #   type: 'string'
      #   format: 'date'
      # modified:
      #   type: 'string'
      #   format: 'date'
      # creator:
      #   type: 'string'
      #   format: 'email'
      body:
        type: 'array'
        items:
          $ref: '#/definitions/AnnotationBody'
      target:
        type: 'array'
        items:
          minItems: 1
          $ref: '#/definitions/AnnotationTarget'

paths:

  '/anno/':
    get:
      tags:
        - 'anno'
      summary: 'Get all annotations'
      parameters: []
      responses:
        200:
          description: all okay
    post:
      tags:
        - 'anno'
      summary: 'Post a new annotation'
      parameters:
        - in: 'body'
          name: 'body'
          description: 'New annotation to post'
          schema:
            $ref: '#/definitions/AnnotationToPost'
      responses:
        200:
          description: all okay


  '/anno/{annoId}':
    get:
      tags:
        - 'anno'
      summary: 'Get a single annotation including all revisions'
      parameters:
        - annoId:
          name: ID of the annotation
      responses:
        200:
          description: all okay

  '/anno/{annoId}/rev/{revId}':
    get:
      tags:
        - 'anno'
      summary: 'Get a single revision of one annotation'
      parameters:
        - annoId:
          name: ID of the annotation
        - revId:
          name: ID of the revision
      responses:
        200:
          description: all okay

  '/anno/{annoId}/comment/{commentId}':
    get:
      tags:
        - 'anno'
      summary: 'Get a single comment on an annotation'
      parameters:
        - annoId:
          name: ID of the annotation
        - revId:
          name: ID of the revision
      responses:
        200:
          description: all okay

  # User:
  #   type: 'object'
  #   properties:
  #     email:
  #       type: 'string'
  #       format: 'email'
  #     groups:

  # AnnotationTarget:
  #     type: 'object'
  #     properties:

  # Annotation:
  #   type: object
  #   properties:
  #     id:
  #       type: 'string'
  #       format: 'url'
  #     modified:
  #       type: 'date'
  #     creator:
  #       type:
  #         $ref: '#/definitions/User'
  #     revisions:
  #       type: 'array'
  #       items:
  #         type: '#/definitions/AnnotationRevision'

